【C++】

一：直接遍历
/**
*  struct ListNode {
*        int val;
*        struct ListNode *next;
*        ListNode(int x) :
*              val(x), next(NULL) {
*        }
*  };
*/
class Solution {
public:
    vector<int> printListFromTailToHead(ListNode* head) {
        vector<int> list1;
        while (head){
            int n = head->val;
            list1.push_back(n);
            head = head->next;
        }
        reverse(list1.begin(), list1.end());
        return list1;
    }
};

二：递归
/**
*  struct ListNode {
*        int val;
*        struct ListNode *next;
*        ListNode(int x) :
*              val(x), next(NULL) {
*        }
*  };
*/
class Solution {
public:
    vector<int> list1;
    
    void dfs(ListNode* node){
        if(!node){
            return;
        }
        dfs(node->next);
        list1.push_back(node->val);
    }
    
    vector<int> printListFromTailToHead(ListNode* head) {
        dfs(head);
        return list1;
    }
};
