【C++】

一：用数组记录每个数字重复的次数
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param numbers int整型vector 
     * @return int整型
     */
    int duplicate(vector<int>& numbers) {
        int len = numbers.size();
        int num[len];
        for(int i=0; i< len; i++){
            num[i] = 0;
        }
        for(int i=0; i<len;i++){
            int n = numbers[i];
            num[n] += 1;
        }
        for(int j=0; j<len;j++){
            if(num[j]>=2){
                return j;
            }
        }
        return -1; 
    }
};

二：直接对比
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param numbers int整型vector 
     * @return int整型
     */
    int duplicate(vector<int>& numbers) {
        int len = numbers.size();
        for(int i=0; i< len-1; i++){
            for(int j=i+1; j<len;j++){
                if(numbers[i]==numbers[j]){
                    return numbers[j];
                }
            }
        }
        return -1;
    }
};

三：先排序再对比
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param numbers int整型vector 
     * @return int整型
     */
    int duplicate(vector<int>& numbers) {
        int len = numbers.size();
        sort(numbers.begin(),numbers.end());
        for(int i=1; i< len; i++){
            if(numbers[i-1]==numbers[i]){
                return numbers[i];
            }
        }
        return -1;
    }
};
