【C++】

一：哈希
class Solution {
public:
    int FirstNotRepeatingChar(string str) {
        unordered_map<char,int> map;
        for(auto ch:str){
            map[ch] += 1;
        }
        int len = str.size();
        for(int i=0; i<len; i++){
            if(map[str[i]]==1){
                return i;
            }
        }
        return -1;
    }
};

二：数组
class Solution {
public:
    int FirstNotRepeatingChar(string str) {
        int map[128]={0};
        for(auto ch:str){
            map[ch] += 1;
        }
        int len = str.size();
        for(int i=0; i<len; i++){
            if(map[str[i]]==1){
                return i;
            }
        }
        return -1;
    }
};

三：哈希表+队列

class Solution {
public:
    int FirstNotRepeatingChar(string str) {
        unordered_map<char, int> map;
        queue<pair<char, int>> q;
        for(int i=0; i<s.size(); i++){
            if(!map.count(s[i])){
                map[s[i]] = i;
                q.emplace(s[i],i);
            }
            else{
                map[s[i]] = -1;
                while(!q.empty()&&map[q.front().first]==-1){
                    q.pop();
                }
            }
        }
        return q.empty()?-1:q.front().second;
    }
};
