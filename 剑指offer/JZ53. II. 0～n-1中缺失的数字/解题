【C++】

一：一次遍历

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int len = nums.size();
        for(int i=0; i<len; i++){
            if(nums[i]!=i) return i;
        }
        return len;
    }
};

时间复杂度：O(n)
空间复杂度：O(1)

二：二分法

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int len = nums.size();
        int l = 0, r = len-1;
        while(l<=r){
            int mid = (l+r)/2;
            if(nums[mid]==mid) l = mid+1;
            else r = mid-1;
        }
        return l;
    }
};

时间复杂度：O(logn)
空间复杂度：O(1)
