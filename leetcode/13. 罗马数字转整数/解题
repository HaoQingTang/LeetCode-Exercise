【C++】

一：模拟，哈希表
通常情况下，罗马数字中小的数字在大的数字的右边。若输入的字符串满足该情况，那么可以将每个字符视作一个单独的值，累加每个字符对应的数值即可。
例如X+X+V+I+I=10+10+5+1+1=27。

若存在小的数字在大的数字的左边的情况，根据规则需要减去小的数字。对于这种情况，我们也可以将每个字符视作一个单独的值，若一个数字右侧的数字比它大，则将该数字的符号取反。
例如X−I+V=10−1+5=14。

（左比右大：相加，左比右小：相减）

class Solution {
public:
    int romanToInt(string s) {
        unordered_map<char, int> map = {
            {'I', 1},
            {'V', 5},
            {'X', 10},
            {'L', 50},
            {'C', 100},
            {'D', 500},
            {'M', 1000}
        };
        int value = 0, num = 0;
        int len = s.size();
        for(int i=0; i<len; i++){
            num = map[s[i]];
            if(i<len-1 && num<map[s[i+1]]) value -= num;
            else value += num;
        }
        return value;
    }
};

时间复杂度：O(n)
空间复杂度：O(1)
