【C++】

一：
（三个指针）
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head) return head;
        ListNode* cur = head;
        ListNode* tmp = head;
        ListNode* root = tmp;
        while(cur->next){
            cur = cur->next;
            if(cur->val!=tmp->val){
                tmp->next = cur;
                tmp = tmp->next;
            }
        }
        tmp->next = nullptr;
        return root;
    }
};

（一个指针）
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if (!head) {
            return head;
        }

        ListNode* cur = head;
        while (cur->next) {
            if (cur->val == cur->next->val) {
                cur->next = cur->next->next;
            }
            else {
                cur = cur->next;
            }
        }

        return head;
    }
};

时间复杂度：O(n)，其中 nn 是链表的长度。
空间复杂度：O(1)。
