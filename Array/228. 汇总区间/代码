[C++]

代码（自己）：
class Solution {
public:
    vector<string> summaryRanges(vector<int>& nums) {
        vector<string> str;
        int a,b;
        int n = nums.size();
        int i = 0;
        while(i<n){
            b = i;              #慢指标
            i++;
            while(i<n && nums[i]==nums[i-1]+1){
                i++;
            }
            a = i-1;            #快指标
            string temp;
            temp.append(to_string(nums[b]));
            if(b<a){
                temp.append("->");
                temp.append(to_string(nums[a]));
            }
            str.push_back(move(temp));
        }
        return str;
    }
};


官方思路：
我们从数组的位置 0 出发，向右遍历。每次遇到相邻元素之间的差值大于 1 时，我们就找到了一个区间。遍历完数组之后，就能得到一系列的区间的列表。

在遍历过程中，维护下标 low 和 high 分别记录区间的起点和终点，对于任何区间都有 low≤high。当得到一个区间时，根据 low 和 high 的值生成区间的字符串表示。

当 low<high 时，区间的字符串表示为 "low→high"；

当 low=high 时，区间的字符串表示为 "low"。


官方代码：
class Solution {
public:
    vector<string> summaryRanges(vector<int>& nums) {
        vector<string> ret;
        int i = 0;
        int n = nums.size();
        while (i < n) {
            int low = i;
            i++;
            while (i < n && nums[i] == nums[i - 1] + 1) {
                i++;
            }
            int high = i - 1;
            string temp = to_string(nums[low]);
            if (low < high) {
                temp.append("->");
                temp.append(to_string(nums[high]));
            }
            ret.push_back(move(temp));
        }
        return ret;
    }
};


