[C++]

代码（自己）：
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> a(numRows);
        int i;
        for(i = 0; i<numRows; i++){
            a[i].resize(i+1);
            a[i][0] = 1;
            for(int j=1; j<i; j++){
                a[i][j]=a[i-1][j-1]+a[i-1][j];
            }
        }
        return a;
    }
};


官方思路：
我们可以一行一行地计算杨辉三角。每当我们计算出第i行的值，我们就可以在线性时间复杂度内计算出第i+1行的值。


官方代码：
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ret(numRows);
        for (int i = 0; i < numRows; ++i) {
            ret[i].resize(i + 1);
            ret[i][0] = ret[i][i] = 1;
            for (int j = 1; j < i; ++j) {
                ret[i][j] = ret[i - 1][j] + ret[i - 1][j - 1];
            }
        }
        return ret;
    }
};
