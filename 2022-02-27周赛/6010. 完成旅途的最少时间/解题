【C++】

一：二分
注意溢出！提前剪枝

class Solution {
public:
    long long minimumTime(vector<int>& time, int totalTrips) {
        sort(time.begin(), time.end());
        long long int l=1;
        long long int r=10e14;
        long long int ans = 0;
        long long int total;
        while(l<r){
            long long int mid = (l+r)/2;
            long long int trip = 0;
            for(long long int i=0; i<time.size(); i++){
                trip += mid/(long long)time[i];
                if(trip>=totalTrips){
                    r = mid;
                    break;
                }
            }
            if(trip<totalTrips){
                l = mid+1;

            }
        }
        return l;
    }
};

时间复杂度：O(nlogn)
空间复杂度：O(1)
