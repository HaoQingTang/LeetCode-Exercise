【C++】

一：排序
class Solution {
public:
    bool asteroidsDestroyed(int mass, vector<int>& asteroids) {
        sort(asteroids.begin(),asteroids.end());
        int len = asteroids.size();
        long sum = mass;
        if(mass>asteroids[len-1]) return true;
        for(int i=0; i<len;i++){
            if(sum>=asteroids[i]){
                sum = sum+asteroids[i];
            }
            else return false;
        }
        return true;
    }
};

二：优先队列
class Solution {
public:
    bool asteroidsDestroyed(int mass, vector<int>& asteroids) {
        priority_queue<int,vector<int>,greater<int>> stone(asteroids.begin(),asteroids.end());
        long sum = mass;
        while(!stone.empty()){
            int point = stone.top();
            stone.pop();
            if(sum>=point){
                sum += point;
            }
            else return false;
        }
        return true;
    }
};

补充：优先队列
定义：priority_queue<Type, Container, Functional>
Type 就是数据类型，Container 就是容器类型（Container必须是用数组实现的容器，比如vector,deque等等，但不能用 list。STL里面默认用的是vector），Functional 就是比较的方式，当需要用自定义的数据类型时才需要传入这三个参数，使用基本数据类型时，只需要传入数据类型，默认是大顶堆
示例：
//升序队列
priority_queue <int,vector<int>,greater<int> > q;
//降序队列
priority_queue <int,vector<int>,less<int> >q;

和队列基本操作相同:
top 访问队头元素
empty 队列是否为空
size 返回队列内元素个数
push 插入元素到队尾 (并排序)
emplace 原地构造一个元素并插入队列
pop 弹出队头元素
swap 交换内容
